"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[624],{6439:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api","title":"API Reference","description":"createEnvSchema","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/envitron/docs/api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/envitron/docs/basics"},"next":{"title":"Schema Types","permalink":"/envitron/docs/schema"}}');var l=s(4848),i=s(8453);const t={sidebar_position:2},o="API Reference",a={},c=[{value:"<code>createEnvSchema</code>",id:"createenvschema",level:2},{value:"Options",id:"options",level:3},{value:"<code>env.get(key, defaultValue?)</code>",id:"envgetkey-defaultvalue",level:2},{value:"<code>env.set(key, value)</code>",id:"envsetkey-value",level:2},{value:"<code>env.all()</code>",id:"envall",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,l.jsx)(n.h2,{id:"createenvschema",children:(0,l.jsx)(n.code,{children:"createEnvSchema"})}),"\n",(0,l.jsx)(n.p,{children:"Creates a type-safe environment schema and returns an environment manager instance."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { createEnvSchema } from 'environment-manager';\n\nconst env = createEnvSchema((schema) => ({\n  PORT: schema.number(),\n  NODE_ENV: schema.enum(['development', 'production', 'test'] as const),\n}));\n"})}),"\n",(0,l.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"envFile"})," (string | string[]): Path(s) to ",(0,l.jsx)(n.code,{children:".env"})," file(s). Default: ",(0,l.jsx)(n.code,{children:".env"}),", if more than one is provided, envs will be merged in file order."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rootPath"})," (string): Root directory for env file resolution. Default: ",(0,l.jsx)(n.code,{children:"process.cwd()"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"logs"})," (boolean): Enable logging. Default: ",(0,l.jsx)(n.code,{children:"true"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"throwErrorOnValidationFail"})," (boolean): Throw on validation error. Default: ",(0,l.jsx)(n.code,{children:"true"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"loadFromProcessEnv"})," (boolean): Merge envs from ",(0,l.jsx)(n.code,{children:"process.env"})," other than from the env files. Default: ",(0,l.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"envgetkey-defaultvalue",children:(0,l.jsx)(n.code,{children:"env.get(key, defaultValue?)"})}),"\n",(0,l.jsxs)(n.p,{children:["Returns the value of the environment variable, type-safe. If not set, returns ",(0,l.jsx)(n.code,{children:"defaultValue"})," if provided."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const port = env.get('PORT', 3000); // number\nconst nodeEnv = env.get('NODE_ENV', 'development'); // 'development' | 'production' | 'test'\n"})}),"\n",(0,l.jsx)(n.h2,{id:"envsetkey-value",children:(0,l.jsx)(n.code,{children:"env.set(key, value)"})}),"\n",(0,l.jsx)(n.p,{children:"Sets the value of an environment variable at runtime (does not persist to file).\nDefault values are not enforced and any can be passed."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"env.set('PORT', 8080);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"envall",children:(0,l.jsx)(n.code,{children:"env.all()"})}),"\n",(0,l.jsx)(n.p,{children:"Returns an object with all parsed environment variables."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const allVars = env.all();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Throws on missing required or invalid type by default (configurable)."}),"\n",(0,l.jsxs)(n.li,{children:["Logs errors if ",(0,l.jsx)(n.code,{children:"logs: true"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"optional: true"})," in schema to allow missing values."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/envitron/docs/schema",children:"Schema Types"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const l={},i=r.createContext(l);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);