"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[633],{693:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"schema","title":"Schema Types","description":"Schemas are useful but not required, envitron loads all envs from a file and those envs can still be used, only they won\'t be type safe","source":"@site/docs/schema.md","sourceDirName":".","slug":"/schema","permalink":"/envitron/docs/schema","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/envitron/docs/api"},"next":{"title":"How Environment Variables Are Parsed","permalink":"/envitron/docs/parsing"}}');var r=s(4848),t=s(8453);const o={sidebar_position:3},i="Schema Types",l={},c=[{value:"String",id:"string",level:2},{value:"Number",id:"number",level:2},{value:"Boolean",id:"boolean",level:2},{value:"Enum",id:"enum",level:2},{value:"Array",id:"array",level:2},{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"schema-types",children:"Schema Types"})}),"\n",(0,r.jsx)(n.p,{children:"Schemas are useful but not required, envitron loads all envs from a file and those envs can still be used, only they won't be type safe\nEnvitron supports the following schema types for environment variables:"}),"\n",(0,r.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"schema.string()\nschema.string({ optional: true })\n"})}),"\n",(0,r.jsx)(n.h2,{id:"number",children:"Number"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"schema.number()\nschema.number({ optional: true })\n"})}),"\n",(0,r.jsx)(n.h2,{id:"boolean",children:"Boolean"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"schema.boolean()\nschema.boolean({ optional: true })\n"})}),"\n",(0,r.jsx)(n.h2,{id:"enum",children:"Enum"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"schema.enum(['development', 'production', 'test'] as const)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"array",children:"Array"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"schema.array()\nschema.array({ optional: true })\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"optional: true"})," \u2014 makes the variable optional (value may be ",(0,r.jsx)(n.code,{children:"undefined"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const env = createEnvSchema((schema) => ({\n  HOST: schema.string(),\n  PORT: schema.number(),\n  DEBUG: schema.boolean({ optional: true }),\n  NODE_ENV: schema.enum(['development', 'production', 'test'] as const),\n  ALLOWED_HOSTS: schema.array({ optional: true }),\n}));\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/envitron/docs/api",children:"API Reference"})," for usage details."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var a=s(6540);const r={},t=a.createContext(r);function o(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);